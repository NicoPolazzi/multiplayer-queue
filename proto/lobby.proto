syntax = "proto3";

package lobby;

import "google/api/annotations.proto";

option go_package = "gen/lobby";

service LobbyService {
  // Creates a new lobby. The creator is inferred from the authentication context.
  rpc CreateLobby(CreateLobbyRequest) returns (Lobby) {
    option (google.api.http) = {
      post: "/api/v1/lobbies"
      body: "*"
    };
  }

  rpc GetLobby(GetLobbyRequest) returns (Lobby) {
    option (google.api.http) = {
      get: "/api/v1/lobbies/{lobby_id}"
    };
  }

  rpc ListAvailableLobbies(ListAvailableLobbiesRequest) returns (ListAvailableLobbiesResponse) {
    option (google.api.http) = {
      get: "/api/v1/lobbies"
    };
  }

  // Allows a user to join an existing lobby. The user joining is inferred
  // from the authentication context.
  rpc JoinLobby(JoinLobbyRequest) returns (Lobby) {
    option (google.api.http) = {
      put: "/api/v1/lobbies/{lobby_id}/join"
      body: "*"
    };
  }
}

message Lobby {
  string lobby_id = 1;
  string name = 2;
  uint32 creator_id = 3;
  optional uint32 opponent_id = 4;
  string status = 5;
  string creator_username = 6;
  optional string opponent_username = 7;
}

message CreateLobbyRequest {
  string name = 1;
  string username =2;
}

message GetLobbyRequest {
  string lobby_id = 1;
}

message ListAvailableLobbiesRequest {}

message ListAvailableLobbiesResponse {
  repeated Lobby lobbies = 1;
}

message JoinLobbyRequest {
  string lobby_id = 1;
  // TODO: This is temporary for the example. In a production system,
  // the user would be identified from the auth context/metadata.
  string username = 2;
}